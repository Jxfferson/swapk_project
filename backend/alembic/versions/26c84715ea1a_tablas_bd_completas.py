"""tablas bd completas

Revision ID: 26c84715ea1a
Revises: 
Create Date: 2025-07-08 07:34:31.061471

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '26c84715ea1a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('faq',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('pregunta', sa.Text(), nullable=True),
    sa.Column('respuesta', sa.Text(), nullable=True),
    sa.Column('orden', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habilidades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('categoria', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('usuarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sa.String(length=255), nullable=True),
    sa.Column('correo', sa.String(length=255), nullable=True),
    sa.Column('contrasena_hash', sa.String(length=255), nullable=True),
    sa.Column('rol', sa.Enum('Administrador', 'Moderador', 'Usuario', 'Verificado', name='rolusuario'), nullable=True),
    sa.Column('fecha_creacion', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('cursos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('titulo', sa.String(length=255), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('objetivo', sa.String(length=255), nullable=True),
    sa.Column('habilidad_Id', sa.Integer(), nullable=True),
    sa.Column('Creador_Id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Creador_Id'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['habilidad_Id'], ['habilidades.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cursos_id'), 'cursos', ['id'], unique=False)
    op.create_table('estadisticas_usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('cursos_completados', sa.Integer(), nullable=True),
    sa.Column('intercambios_Realizados', sa.Integer(), nullable=True),
    sa.Column('calificacion_promedio', sa.Float(), nullable=True),
    sa.Column('reseñas_totales', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habilidades_usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('id_habilidad', sa.Integer(), nullable=True),
    sa.Column('nivel', sa.Enum('Principiante', 'Intermedio', 'Experto', name='nivelhabilidad'), nullable=True),
    sa.ForeignKeyConstraint(['id_habilidad'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('intercambios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario_oferta', sa.Integer(), nullable=True),
    sa.Column('id_usuario_solicita', sa.Integer(), nullable=True),
    sa.Column('id_habilidad_oferta', sa.Integer(), nullable=True),
    sa.Column('id_habilidad_solicita', sa.Integer(), nullable=True),
    sa.Column('estado', sa.Enum('Pendiente', 'Confirmado', 'Finalizado', name='estadointercambio'), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_habilidad_oferta'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_habilidad_solicita'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_usuario_oferta'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['id_usuario_solicita'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('mensajes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_Emisor', sa.Integer(), nullable=True),
    sa.Column('id_Receptor', sa.Integer(), nullable=True),
    sa.Column('contenido', sa.Text(), nullable=True),
    sa.Column('fecha_envio', sa.DateTime(), nullable=True),
    sa.Column('leido', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_Emisor'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['id_Receptor'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notificaciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('contenido', sa.Text(), nullable=True),
    sa.Column('tipo', sa.Enum('Recordatorio_Aceptado', 'Recordatorio_Cancelado', 'Curso_Aceptado', 'Curso_Cancelado', 'Recordatorio_Trueque', 'Recordatorio_Curso', 'Mensaje', 'Personalizada', name='tiponotificacion'), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('leido', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('preferencia_usuario',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('modalidad', sa.Enum('Virtual', 'Presencial', 'Hibrido', name='modalidad'), nullable=True),
    sa.Column('idiomas', sa.String(length=255), nullable=True),
    sa.Column('intereses', sa.String(length=255), nullable=True),
    sa.Column('nivel', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('registro_actividad',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('usuario_id', sa.Integer(), nullable=True),
    sa.Column('Tipo', sa.Enum('Actualizar_Perfil', 'Enviar_Mensaje', 'Crear_Intercambio', 'Calificar_Intercambio', 'Crear_Curso', 'Agendar_Sesion', 'Reporte_Usuario', name='tipoactividad'), nullable=True),
    sa.Column('Descripcion', sa.String(length=255), nullable=True),
    sa.Column('fecha_hora', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['usuario_id'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reportes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('tipo', sa.String(length=255), nullable=True),
    sa.Column('estado', sa.Enum('Enviado', 'Revisado', 'Rechazado', 'Resuelto', 'Cerrado', name='estadoreporte'), nullable=True),
    sa.Column('fecha_reporte', sa.DateTime(), nullable=True),
    sa.Column('motivo', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('resenas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_Autor', sa.Integer(), nullable=True),
    sa.Column('id_Receptor', sa.Integer(), nullable=True),
    sa.Column('calificacion', sa.Float(), nullable=True),
    sa.Column('comentario', sa.Text(), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_Autor'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['id_Receptor'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sugerencias',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('tipo', sa.Enum('Nueva_Categoria', 'Mejora_UIUX', 'Mejora_Funcionalidad', 'Sugerencia_General', 'Peticion_Caracteristica', name='tiposugerencia'), nullable=True),
    sa.Column('Mensaje', sa.String(length=255), nullable=True),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('archivos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('nombre', sa.String(length=255), nullable=True),
    sa.Column('tipo', sa.String(length=255), nullable=True),
    sa.Column('Tamaño_bytes', sa.String(length=255), nullable=True),
    sa.Column('url', sa.String(length=255), nullable=True),
    sa.Column('fecha_subida', sa.DateTime(), nullable=True),
    sa.Column('Id_Curso', sa.Integer(), nullable=True),
    sa.Column('Id_Intercambio', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['Id_Curso'], ['cursos.id'], ),
    sa.ForeignKeyConstraint(['Id_Intercambio'], ['intercambios.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detalle_cursos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_curso', sa.Integer(), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('titulo', sa.String(length=255), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('objetivo', sa.String(length=255), nullable=True),
    sa.Column('habilidad_Id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['habilidad_Id'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_curso'], ['cursos.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detalle_intercambios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_intercambio', sa.Integer(), nullable=True),
    sa.Column('id_usuario_Solicitante', sa.Integer(), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('id_habilidad_ofrecida', sa.Integer(), nullable=True),
    sa.Column('id_habilidad_solicitada', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_habilidad_ofrecida'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_habilidad_solicitada'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['id_intercambio'], ['intercambios.id'], ),
    sa.ForeignKeyConstraint(['id_usuario_Solicitante'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('historiales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('id_curso', sa.Integer(), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id_curso'], ['cursos.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('informaciones',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('id_curso', sa.Integer(), nullable=True),
    sa.Column('contenido', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['id_curso'], ['cursos.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inscripciones_curso',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_curso', sa.Integer(), nullable=True),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('fecha_Inscripcion', sa.DateTime(), nullable=True),
    sa.Column('estado', sa.Enum('Pendiente', 'Confirmado', 'Finalizado', name='estadoinscripcion'), nullable=True),
    sa.ForeignKeyConstraint(['id_curso'], ['cursos.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sesiones_Curso',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_intercambio', sa.Integer(), nullable=True),
    sa.Column('fecha_hora', sa.DateTime(), nullable=True),
    sa.Column('modalidad', sa.Enum('Virtual', 'Presencial', 'Hibrido', name='modalidad'), nullable=True),
    sa.ForeignKeyConstraint(['id_intercambio'], ['cursos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sesiones_Intercambio',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_intercambio', sa.Integer(), nullable=True),
    sa.Column('fecha_hora', sa.DateTime(), nullable=True),
    sa.Column('modalidad', sa.Enum('Virtual', 'Presencial', 'Hibrido', name='modalidad'), nullable=True),
    sa.ForeignKeyConstraint(['id_intercambio'], ['intercambios.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('perfiles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_usuario', sa.Integer(), nullable=True),
    sa.Column('nombre', sa.String(length=255), nullable=True),
    sa.Column('descripcion', sa.Text(), nullable=True),
    sa.Column('ubicacion', sa.String(length=255), nullable=True),
    sa.Column('foto_perfil', sa.String(length=255), nullable=True),
    sa.Column('informacion_Id', sa.Integer(), nullable=True),
    sa.Column('historial_Id', sa.Integer(), nullable=True),
    sa.Column('habilidad_Id', sa.Integer(), nullable=True),
    sa.Column('detalle_Intercambio', sa.Integer(), nullable=True),
    sa.Column('detalle_Curso', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['detalle_Curso'], ['detalle_cursos.id'], ),
    sa.ForeignKeyConstraint(['detalle_Intercambio'], ['detalle_intercambios.id'], ),
    sa.ForeignKeyConstraint(['habilidad_Id'], ['habilidades.id'], ),
    sa.ForeignKeyConstraint(['historial_Id'], ['historiales.id'], ),
    sa.ForeignKeyConstraint(['id_usuario'], ['usuarios.id'], ),
    sa.ForeignKeyConstraint(['informacion_Id'], ['informaciones.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('perfiles')
    op.drop_table('sesiones_Intercambio')
    op.drop_table('sesiones_Curso')
    op.drop_table('inscripciones_curso')
    op.drop_table('informaciones')
    op.drop_table('historiales')
    op.drop_table('detalle_intercambios')
    op.drop_table('detalle_cursos')
    op.drop_table('archivos')
    op.drop_table('sugerencias')
    op.drop_table('resenas')
    op.drop_table('reportes')
    op.drop_table('registro_actividad')
    op.drop_table('preferencia_usuario')
    op.drop_table('notificaciones')
    op.drop_table('mensajes')
    op.drop_table('intercambios')
    op.drop_table('habilidades_usuario')
    op.drop_table('estadisticas_usuario')
    op.drop_index(op.f('ix_cursos_id'), table_name='cursos')
    op.drop_table('cursos')
    op.drop_table('usuarios')
    op.drop_table('habilidades')
    op.drop_table('faq')
    # ### end Alembic commands ###
